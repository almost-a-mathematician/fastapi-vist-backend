version: '3.8'

services:
  fastapi: 
    container_name: fastapi-vist
    build: .
    depends_on:
      - pgdb
    command: python main.py
    volumes:
      - .:/usr/src/app
    ports:
      - 8085:8000
    restart: always
    env_file:
      - .env

  pgdb:
    container_name: vist-postgres
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    env_file:
      - .env

  redis:
    container_name: vist-redis
    image: redis:latest
    ports:
      - 6379:6379
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    env_file:
      - .env
    
  minio:
    container_name: vist-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"      
      - "9001:9001" # консоль управления
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: always
    env_file:
      - .env
  
  minio-init:
    container_name: vist-minio-init
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set vistminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb vistminio/${MINIO_BUCKET_NAME} --ignore-existing;
      /usr/bin/mc anonymous set public vistminio/${MINIO_BUCKET_NAME};
      exit 0;
      "
    env_file:
      - .env

volumes:
  redis_data: 
  minio_data: